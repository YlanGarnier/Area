// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.3
// source: dropbox_reaction_service.proto

package protogen

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	DropboxServiceReaction_CreateFolder_FullMethodName = "/DropboxServiceReaction/createFolder"
	DropboxServiceReaction_CreateFile_FullMethodName   = "/DropboxServiceReaction/createFile"
	DropboxServiceReaction_CreateTag_FullMethodName    = "/DropboxServiceReaction/createTag"
)

// DropboxServiceReactionClient is the client API for DropboxServiceReaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DropboxServiceReactionClient interface {
	CreateFolder(ctx context.Context, in *Format_OnlyTitle, opts ...grpc.CallOption) (*Empty, error)
	CreateFile(ctx context.Context, in *Format_GHIncidentReport, opts ...grpc.CallOption) (*Empty, error)
	CreateTag(ctx context.Context, in *Format_OnlyTitle, opts ...grpc.CallOption) (*Empty, error)
}

type dropboxServiceReactionClient struct {
	cc grpc.ClientConnInterface
}

func NewDropboxServiceReactionClient(cc grpc.ClientConnInterface) DropboxServiceReactionClient {
	return &dropboxServiceReactionClient{cc}
}

func (c *dropboxServiceReactionClient) CreateFolder(ctx context.Context, in *Format_OnlyTitle, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, DropboxServiceReaction_CreateFolder_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dropboxServiceReactionClient) CreateFile(ctx context.Context, in *Format_GHIncidentReport, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, DropboxServiceReaction_CreateFile_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dropboxServiceReactionClient) CreateTag(ctx context.Context, in *Format_OnlyTitle, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, DropboxServiceReaction_CreateTag_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DropboxServiceReactionServer is the server API for DropboxServiceReaction service.
// All implementations must embed UnimplementedDropboxServiceReactionServer
// for forward compatibility
type DropboxServiceReactionServer interface {
	CreateFolder(context.Context, *Format_OnlyTitle) (*Empty, error)
	CreateFile(context.Context, *Format_GHIncidentReport) (*Empty, error)
	CreateTag(context.Context, *Format_OnlyTitle) (*Empty, error)
	mustEmbedUnimplementedDropboxServiceReactionServer()
}

// UnimplementedDropboxServiceReactionServer must be embedded to have forward compatible implementations.
type UnimplementedDropboxServiceReactionServer struct {
}

func (UnimplementedDropboxServiceReactionServer) CreateFolder(context.Context, *Format_OnlyTitle) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFolder not implemented")
}
func (UnimplementedDropboxServiceReactionServer) CreateFile(context.Context, *Format_GHIncidentReport) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFile not implemented")
}
func (UnimplementedDropboxServiceReactionServer) CreateTag(context.Context, *Format_OnlyTitle) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTag not implemented")
}
func (UnimplementedDropboxServiceReactionServer) mustEmbedUnimplementedDropboxServiceReactionServer() {
}

// UnsafeDropboxServiceReactionServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DropboxServiceReactionServer will
// result in compilation errors.
type UnsafeDropboxServiceReactionServer interface {
	mustEmbedUnimplementedDropboxServiceReactionServer()
}

func RegisterDropboxServiceReactionServer(s grpc.ServiceRegistrar, srv DropboxServiceReactionServer) {
	s.RegisterService(&DropboxServiceReaction_ServiceDesc, srv)
}

func _DropboxServiceReaction_CreateFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Format_OnlyTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DropboxServiceReactionServer).CreateFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DropboxServiceReaction_CreateFolder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DropboxServiceReactionServer).CreateFolder(ctx, req.(*Format_OnlyTitle))
	}
	return interceptor(ctx, in, info, handler)
}

func _DropboxServiceReaction_CreateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Format_GHIncidentReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DropboxServiceReactionServer).CreateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DropboxServiceReaction_CreateFile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DropboxServiceReactionServer).CreateFile(ctx, req.(*Format_GHIncidentReport))
	}
	return interceptor(ctx, in, info, handler)
}

func _DropboxServiceReaction_CreateTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Format_OnlyTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DropboxServiceReactionServer).CreateTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DropboxServiceReaction_CreateTag_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DropboxServiceReactionServer).CreateTag(ctx, req.(*Format_OnlyTitle))
	}
	return interceptor(ctx, in, info, handler)
}

// DropboxServiceReaction_ServiceDesc is the grpc.ServiceDesc for DropboxServiceReaction service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DropboxServiceReaction_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "DropboxServiceReaction",
	HandlerType: (*DropboxServiceReactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createFolder",
			Handler:    _DropboxServiceReaction_CreateFolder_Handler,
		},
		{
			MethodName: "createFile",
			Handler:    _DropboxServiceReaction_CreateFile_Handler,
		},
		{
			MethodName: "createTag",
			Handler:    _DropboxServiceReaction_CreateTag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dropbox_reaction_service.proto",
}
